on:
  release:
    types: [created]
name: Package Release
jobs:
  generate:
    name: Create release-artifacts
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Set version number
        run: |
          BUILDINFO=`ls -1 src/net/coagulate/Core/BuildInfo/*.java`
          CLASSNAME=`echo $BUILDINFO|sed 's/.*\/\([^\/]*\).java/\1/;'`
          SHA=`git rev-parse --short HEAD`
          BUILDDATE=`git show -s --format=%at`
          echo Write version date $BUILDDATE sha $SHA to file $BUILDINFO
          echo 'package net.coagulate.Core.BuildInfo;' >$BUILDINFO
          echo 'import java.util.Date;'  >>$BUILDINFO
          echo 'public class '$CLASSNAME' {'  >>$BUILDINFO
          echo '	public static final String COMMITID="'$SHA'";'  >>$BUILDINFO
          echo '	public static final Date BUILDDATE=new Date('$BUILDDATE'000L);'  >>$BUILDINFO
          echo '}'  >>$BUILDINFO
          cat $BUILDINFO
      - name: Build with Maven
        env: 
          PACKAGE_READ: ${{ secrets.PACKAGE_READ }}
        run: mvn --batch-mode --update-snapshots verify -s $GITHUB_WORKSPACE/settings.xml package
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Dump environment
        run: set
      - name: Identify release asset
        run: echo '::set-output name=UPLOAD_FILE::'`cd bin;ls -1 *-jar-with-dependencies.jar`
        id: getname
      - name: Display release ID
        run: echo Target is ${{ steps.getname.outputs.UPLOAD_FILE }}
      - name: Upload release binary
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./bin/${{ steps.getname.outputs.UPLOAD_FILE }}
          asset_name: ${{ steps.getname.outputs.UPLOAD_FILE }}
          asset_content_type: application/octet-stream
